[2012/03/21 - Version0.0.2 - リリース]

■追加機能[1]
  Setsuna起動時にサーバモードで起動するオプションを追加
  以下の起動方法で起動することでサーバモードで起動し、従来のパイプではなく
  NW越しにデータを投入することが可能です。

  (事前準備)
  Setsunaのサーバモードは内部的にMessagePack-RPCのJava版を利用しています。
  そのため、起動するにはMessagePack-RPCとそれが依存するライブラリが必要になります。
  リリース時点で利用したライブラリを配布物のlibディレクトリ配下のmsgpackの下に全て同梱しています。
  ただ、最新の関連するライブラリを配布元から取得して利用することをおすすめします。

  [サーバ側の説明]
   (起動方法) !!注意!! 従来の-jar指定での利用はできません。
    java -classpath ./:./lib/msgpack/*:setsuna.jar setsuna.core.SetsunaMain -server true

    ※Linux想定 
    ※リリース物展開ディレクトリでの操作想定 
    ※従来のパイプ入力の場合は従来通りの起動方法です。(java -jar setsuna.jar)
   (利用する起動パラメータ
    ・-server   :trueを指定することで、サーバモードで起動します。
                 (例) -server true

    ・-bindaddr :サーバモードの起動時のサーバがバインドするアドレス
                 省略した場合0.0.0.0アドレスにバンドされることになる
                 (例) -bindaddr 192.168.1.1

    ・-bindport :サーバモードの起動時のサーバが待ち受けるポート番号
                 省略した場合10028で起動することになる
                 (例) -bindport 10222

   (説明)
    1."-server true"を指定することでサーバモードになりNWサーバ型になる。
      作成されるテーブル名指定(-stream)を省略すると"SERVER"というテーブル名でデータベース上に作成されます。
    2.データを投入する部分以外は従来と全て同じ利用方法です。
      カラム定義に関しては-column指定でサーバ起動時に決定するか、クライアント側から最初に送られたデータで自動作成されます。


  [クライアント側の説明]
   (サーバ側に定義されているメソッド)
    サーバ側のデータ投入に呼び出すメソッドは以下のようにサーバに定義されています。
    [定義メソッド]
     int next (String[] sendData)
      @引数  ：Setsunaに投入したい1レコードのデータColumn数分のデータの配列
      @戻り値：Setsuna側の登録結果 0=登録成功、-9=カラム定義と送られたデータ配列の数が合わないエラー、-9=サーバ内部エラー

   (サンプル実装)
    ./test/ServerClientSample配下のSetsunaServerModeClientSample.javaを参考にしてください。



■追加機能[2]
  Setsuna自身のエラー出力をファイルに出力できる機能を追加
  従来Setsunaは内部で発生したエラー出力も全てコンソールに出力されていたが、これをファイルに出力する機能です。
  起動オプションに以下を指定
  [オプション文字列]
   -errorlog
  [指定する値]
   ファイルパス

  [指定例]
   -errorlog "/var/log/setsuna_error.log"